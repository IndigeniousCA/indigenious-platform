{
  "name": "@indigenious/web",
  "version": "1.0.0",
  "private": true,
  "main": "electron/main.js",
  "scripts": {
    "dev": "next dev",
    "build": "prisma generate && next build",
    "vercel-build": "prisma generate && next build",
    "postinstall": "prisma generate",
    "build:analyze": "ANALYZE=true next build",
    "start": "NODE_ENV=production node server.js",
    "start:next": "next start",
    "lint": "next lint",
    "lint:fix": "next lint --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "type-check": "tsc --noEmit",
    "test": "jest --passWithNoTests",
    "test:unit": "vitest",
    "test:unit:ui": "vitest --ui",
    "test:unit:coverage": "vitest --coverage",
    "test:watch": "vitest --watch",
    "test:all": "npm run test:unit && npm run test:e2e",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:report": "playwright show-report",
    "test:load": "k6 run k6/scenarios/indigenous-platform-load-test.js",
    "test:load:critical": "k6 run k6/scenarios/critical-workflows-test.js",
    "test:load:dashboard": "k6 run --out influxdb=http://localhost:8086/k6 k6/scenarios/indigenous-platform-load-test.js",
    "mcp:server": "tsx src/lib/mcp/start-server.ts",
    "mcp:dev": "concurrently \"npm run dev\" \"npm run mcp:server\"",
    "build:slsa": "npm run build && npm run slsa:generate-sbom",
    "slsa:generate-sbom": "npx @cyclonedx/cyclonedx-npm --output-format json --output-file build/sbom.json",
    "slsa:verify": "./slsa/scripts/verify-build.sh",
    "slsa:sign": "node slsa/scripts/generate-provenance.ts",
    "security:audit": "npm audit --audit-level=moderate",
    "security:scan": "snyk test",
    "setup:secrets": "tsx scripts/setup-secrets.ts",
    "electron": "electron .",
    "electron-dev": "ELECTRON_IS_DEV=1 electron .",
    "electron-dev-win": "set ELECTRON_IS_DEV=1 && electron .",
    "build-electron": "next build && next export && electron-builder",
    "dist": "electron-builder",
    "dist-all": "electron-builder -mwl",
    "desktop:dev": "concurrently \"npm run dev\" \"wait-on http://localhost:3000 && npm run electron-dev\"",
    "desktop:build": "node scripts/build-desktop.js",
    "desktop:build-mac": "node scripts/build-desktop.js mac",
    "desktop:build-win": "node scripts/build-desktop.js win",
    "desktop:build-linux": "node scripts/build-desktop.js linux",
    "portable:build": "node scripts/build-portable.js",
    "portable:build-win": "node scripts/build-portable.js windows",
    "portable:build-linux": "node scripts/build-portable.js linux",
    "portable:build-all": "node scripts/build-portable.js all",
    "deploy": "./scripts/deploy.sh production",
    "deploy:staging": "./scripts/deploy.sh staging",
    "deploy:preview": "vercel",
    "db:generate": "prisma generate",
    "db:migrate": "prisma migrate dev",
    "db:migrate:create": "prisma migrate dev --create-only",
    "db:push": "prisma db push",
    "db:seed": "tsx scripts/seed.ts",
    "db:reset": "prisma migrate reset",
    "db:migrate:deploy": "prisma migrate deploy",
    "db:check": "tsx scripts/check-db.ts",
    "redis:check": "tsx scripts/check-redis.ts",
    "s3:check": "tsx scripts/check-s3.ts",
    "email:test": "tsx scripts/test-email.ts",
    "sms:test": "tsx scripts/test-sms.ts",
    "storage:migrate": "tsx src/lib/storage/s3/migrate-to-s3.ts migrate",
    "storage:verify": "tsx src/lib/storage/s3/migrate-to-s3.ts verify",
    "storage:rollback": "tsx src/lib/storage/s3/migrate-to-s3.ts rollback",
    "env:validate": "node scripts/validate-env.js",
    "env:help": "cat ENV_SETUP.md",
    "generate:secrets": "tsx scripts/generate-secrets.ts",
    "test:production": "NODE_ENV=production npm run test",
    "test:smoke": "tsx scripts/smoke-tests.ts",
    "test:integration": "vitest run --config vitest.integration.config.ts",
    "security:check": "npm audit --audit-level=moderate && eslint . --ext .ts,.tsx --plugin security",
    "security:monitor": "snyk monitor",
    "security:fix": "snyk fix",
    "prepare": "node -e \"if (process.env.NODE_ENV !== 'production' && !process.env.VERCEL) { require('child_process').execSync('husky', {stdio: 'inherit'}) }\"",
    "build:validation": "tsc -p src/lib/code-quality/tsconfig.json",
    "validate:code": "tsx src/lib/code-quality/validate.ts code",
    "validate:context": "tsx src/lib/code-quality/validate.ts context",
    "validate:integration": "tsx src/lib/code-quality/validate.ts integration",
    "validate:all": "tsx src/lib/code-quality/validate.ts all",
    "deps:check": "npm outdated && npm audit",
    "performance:report": "tsx scripts/performance-report.ts",
    "db:setup:test": "NODE_ENV=test npm run db:push && NODE_ENV=test npm run db:seed",
    "storybook": "storybook dev -p 6006",
    "build-storybook": "storybook build",
    "i18n:sync": "./scripts/crowdin/sync-translations.sh sync",
    "i18n:upload": "./scripts/crowdin/sync-translations.sh upload",
    "i18n:download": "./scripts/crowdin/sync-translations.sh download",
    "i18n:validate": "node scripts/crowdin/validate-translations.js",
    "i18n:status": "./scripts/crowdin/sync-translations.sh status"
  },
  "dependencies": {
    "@aws-sdk/client-cloudfront": "^3.716.0",
    "@aws-sdk/client-s3": "^3.716.0",
    "@aws-sdk/client-secrets-manager": "^3.844.0",
    "@aws-sdk/lib-storage": "^3.716.0",
    "@aws-sdk/s3-request-presigner": "^3.716.0",
    "@elastic/elasticsearch": "^9.0.2",
    "@google-cloud/logging-winston": "^6.0.1",
    "@google-cloud/secret-manager": "^6.1.0",
    "@hookform/resolvers": "^3.3.4",
    "@modelcontextprotocol/sdk": "^0.6.0",
    "@next-auth/prisma-adapter": "^1.0.7",
    "@octokit/rest": "^22.0.0",
    "@opentelemetry/core": "^2.0.1",
    "@opentelemetry/sdk-trace-base": "^2.0.1",
    "@prisma/client": "^6.11.1",
    "@radix-ui/react-toast": "^1.2.14",
    "@react-pdf/font": "^4.0.2",
    "@react-pdf/renderer": "^4.3.0",
    "@react-three/drei": "^10.5.0",
    "@react-three/fiber": "^9.2.0",
    "@scalar/nextjs-api-reference": "^0.8.8",
    "@sendgrid/mail": "^8.1.5",
    "@sentry/nextjs": "^9.33.0",
    "@slack/web-api": "^7.9.3",
    "@stripe/stripe-js": "^7.4.0",
    "@supabase/auth-helpers-nextjs": "^0.10.0",
    "@supabase/auth-helpers-react": "^0.5.0",
    "@supabase/ssr": "^0.6.1",
    "@supabase/supabase-js": "^2.45.0",
    "@temporalio/activity": "^1.8.0",
    "@temporalio/client": "^1.8.0",
    "@temporalio/worker": "^1.8.0",
    "@temporalio/workflow": "^1.8.0",
    "@tensorflow/tfjs": "^4.22.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/bull": "^3.15.9",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/nodemailer": "^6.4.17",
    "@types/qrcode": "^1.5.5",
    "@types/serviceworker-webpack-plugin": "^1.0.7",
    "@types/speakeasy": "^2.0.10",
    "@upstash/ratelimit": "^2.0.5",
    "@upstash/redis": "^1.35.1",
    "aws-sdk": "^2.1692.0",
    "bcryptjs": "^3.0.2",
    "bull": "^4.16.5",
    "canvas-confetti": "^1.9.3",
    "chalk": "^4.1.2",
    "clamscan": "^2.4.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "commander": "^11.0.0",
    "critters": "^0.0.23",
    "cron": "^4.3.1",
    "d3": "^7.8.5",
    "date-fns": "^4.1.0",
    "ethers": "^6.15.0",
    "form-data": "^4.0.3",
    "framer-motion": "^11.2.0",
    "gpt-3-encoder": "^1.1.4",
    "ioredis": "^5.6.1",
    "isomorphic-dompurify": "^2.11.0",
    "jsonwebtoken": "^9.0.2",
    "kafkajs": "^2.2.4",
    "languagedetect": "^2.0.0",
    "lucide-react": "^0.400.0",
    "merkletreejs": "^0.5.2",
    "nats": "^2.19.0",
    "next": "^15.3.5",
    "next-auth": "^4.24.11",
    "next-pwa": "^5.6.0",
    "node-cron": "^4.2.0",
    "node-fetch": "^2.7.0",
    "nodemailer": "^7.0.4",
    "ollama": "^0.5.0",
    "openai": "^5.8.4",
    "ora": "^5.4.1",
    "pdfkit": "^0.17.1",
    "pino": "^9.7.0",
    "prom-client": "^15.1.3",
    "qrcode": "^1.5.4",
    "rate-limiter-flexible": "^7.1.1",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-hook-form": "^7.48.2",
    "react-hot-toast": "^2.5.2",
    "recharts": "^2.12.0",
    "redis": "^5.5.6",
    "socket.io-client": "^4.8.1",
    "speakeasy": "^2.0.0",
    "stripe": "^18.2.1",
    "surrealdb.js": "^0.11.1",
    "tailwind-merge": "^2.6.0",
    "tailwindcss": "^3.4.0",
    "tailwindcss-animate": "^1.0.7",
    "three": "^0.178.0",
    "twilio": "^5.7.1",
    "weaviate-ts-client": "^1.5.0",
    "web-ifc-three": "^0.0.126",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0",
    "xlsx": "^0.18.5",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@electron/notarize": "^3.0.1",
    "@faker-js/faker": "^9.8.0",
    "@next/bundle-analyzer": "^15.3.4",
    "@playwright/experimental-ct-react": "^1.53.1",
    "@playwright/test": "^1.53.1",
    "@snyk/protect": "^1.1297.3",
    "@storybook/addon-docs": "^9.0.15",
    "@storybook/addon-onboarding": "^9.0.15",
    "@storybook/nextjs": "^9.0.15",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/d3": "^7.4.3",
    "@types/jest": "^30.0.0",
    "@types/jest-axe": "^3.5.9",
    "@types/k6": "^1.1.0",
    "@types/node": "^20.19.2",
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "@types/sqlite3": "^3.1.11",
    "@vitejs/plugin-react": "^4.6.0",
    "@vitest/ui": "^2.0.0",
    "archiver": "^7.0.1",
    "autoprefixer": "^10.4.19",
    "axe-core": "^4.10.3",
    "axios": "^1.7.4",
    "commitizen": "^4.3.0",
    "concurrently": "^8.2.0",
    "cross-env": "^7.0.3",
    "electron": "^33.2.1",
    "electron-builder": "^25.1.8",
    "electron-is-dev": "^3.0.1",
    "electron-store": "^10.0.0",
    "eslint": "^8.0.0",
    "eslint-config-next": "^15.3.5",
    "eslint-config-prettier": "^10.1.5",
    "eslint-plugin-no-secrets": "^2.2.1",
    "eslint-plugin-security": "^3.0.1",
    "eslint-plugin-storybook": "^9.0.15",
    "glob": "^11.0.3",
    "happy-dom": "^18.0.1",
    "http-proxy-middleware": "^3.0.5",
    "husky": "^9.1.7",
    "jest": "^30.0.3",
    "jest-axe": "^10.0.0",
    "jest-environment-jsdom": "^30.0.2",
    "k6": "^0.0.0",
    "lint-staged": "^16.1.2",
    "msw": "^2.10.2",
    "node-polyfill-webpack-plugin": "^4.1.0",
    "postcss": "^8.4.38",
    "prettier": "^3.6.2",
    "prisma": "^6.11.1",
    "snyk": "^1.1297.3",
    "sqlite3": "^5.1.7",
    "storybook": "^9.0.15",
    "style-dictionary": "^5.0.1",
    "ts-jest": "^29.4.0",
    "tsx": "^4.20.3",
    "typescript": "^5.8.3",
    "vercel": "^37.0.0",
    "vite": "^5.0.0",
    "vitest": "^2.0.0"
  },
  "prisma": {
    "seed": "tsx scripts/seed.ts"
  },
  "build": {
    "appId": "ca.indigenious.platform",
    "productName": "Indigenious Platform",
    "directories": {
      "output": "dist/electron"
    },
    "files": [
      "electron/**/*",
      "out/**/*",
      "node_modules/**/*",
      "package.json"
    ],
    "mac": {
      "category": "public.app-category.business",
      "icon": "electron/icons/icon.icns"
    },
    "win": {
      "target": "nsis",
      "icon": "electron/icons/icon.ico"
    },
    "linux": {
      "target": "AppImage",
      "icon": "electron/icons/icon.png"
    }
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "overrides": {
    "ajv": "^8.17.1",
    "whatwg-url": "^14.0.0"
  }
}
